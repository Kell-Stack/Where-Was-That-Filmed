{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar invariant = require(\"invariant\");\n\nvar helper_1 = require(\"../../utils/helper\");\n\nvar map_context_1 = require(\"../../map-context\");\n\nvar eventMap = {\n  onPlacesChanged: \"places_changed\"\n};\nvar updaterMap = {\n  bounds: function bounds(instance, _bounds) {\n    instance.setBounds(_bounds);\n  }\n};\n\nvar StandaloneSearchBox = function (_super) {\n  __extends(StandaloneSearchBox, _super);\n\n  function StandaloneSearchBox() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.registeredEvents = [];\n    _this.containerElement = React.createRef();\n    _this.state = {\n      searchBox: null\n    };\n\n    _this.setSearchBoxCallback = function () {\n      if (_this.state.searchBox !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.searchBox);\n      }\n    };\n\n    return _this;\n  }\n\n  StandaloneSearchBox.prototype.componentDidMount = function () {\n    invariant(google.maps.places, 'Did you include \"libraries=places\" in the URL?');\n\n    if (this.containerElement !== null && this.containerElement.current !== null) {\n      var input = this.containerElement.current.querySelector(\"input\");\n\n      if (input) {\n        var searchBox_1 = new google.maps.places.SearchBox(input, this.props.options);\n        this.registeredEvents = helper_1.applyUpdatersToPropsAndRegisterEvents({\n          updaterMap: updaterMap,\n          eventMap: eventMap,\n          prevProps: {},\n          nextProps: this.props,\n          instance: searchBox_1\n        });\n        this.setState(function setSearchBox() {\n          return {\n            searchBox: searchBox_1\n          };\n        }, this.setSearchBoxCallback);\n      }\n    }\n  };\n\n  StandaloneSearchBox.prototype.componentDidUpdate = function (prevProps) {\n    if (this.state.searchBox !== null) {\n      helper_1.unregisterEvents(this.registeredEvents);\n      this.registeredEvents = helper_1.applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap,\n        eventMap: eventMap,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.searchBox\n      });\n    }\n  };\n\n  StandaloneSearchBox.prototype.componentWillUnmount = function () {\n    if (this.state.searchBox !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.searchBox);\n      }\n\n      helper_1.unregisterEvents(this.registeredEvents);\n    }\n  };\n\n  StandaloneSearchBox.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.containerElement\n    }, React.Children.only(this.props.children));\n  };\n\n  StandaloneSearchBox.contextType = map_context_1.default;\n  return StandaloneSearchBox;\n}(React.PureComponent);\n\nexports.default = StandaloneSearchBox;","map":null,"metadata":{},"sourceType":"script"}