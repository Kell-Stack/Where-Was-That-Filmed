{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js\";\nimport React, { Component } from 'react'; // import {Container, Row, Col }from 'react-bootstrap'\n// import { MapContainer } from './MapContainer';\n\nconst APIactors = '/AllActors';\nconst APItourbyactor = '/TourByActor/';\n\nclass AllActorsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actors: [],\n      sortedActors: []\n    };\n  }\n\n  loadActors() {\n    console.log(\"Ringing:\", APIactors);\n    fetch(APIactors).then(res => res.json()).then(result => {\n      this.setState({\n        actors: result\n      });\n      this.setState({\n        sortedActors: this.generateUniqueActors(this.state.actors)\n      });\n      console.log('âœ…', this.generateUniqueActors(this.state.actors));\n    }).catch(err => console.log('ðŸ›‘ðŸ›‘ðŸ›‘ Check All Actors Component', err));\n  }\n\n  generateUniqueActors(filmList) {\n    var uniqueActors = {};\n    filmList.forEach(film => {\n      // TODO: refactor into loop\n      if (uniqueActors[film.actor_1] == undefined) {\n        uniqueActors[film.actor_1] = true;\n      }\n\n      if (uniqueActors[film.actor_2] == undefined) {\n        uniqueActors[film.actor_2] = true;\n      }\n\n      if (uniqueActors[film.actor_3] == undefined) {\n        uniqueActors[film.actor_3] = true;\n      }\n    });\n    let sortedActors = Object.keys(uniqueActors).sort();\n    return sortedActors;\n  }\n\n  componentWillMount() {\n    this.loadActors();\n  }\n\n  locationsByActors(actorLocList) {\n    actorLocList.forEach(actors => {\n      fetch(APIactors + actors).then(res => res.json()).then(result => {\n        this.setState({\n          title: result\n        });\n        console.log(\"ðŸ’‹\", this.state.result); // this.setState({actorLocs:)})\n      });\n    });\n  } // [\n  // \t{name: \"Eddie Murphy\", films: [ {name: \"\", id: \"\"} ]}\n  // ]\n  // [{\n  // actor: value\n  // \t{id: val,\n  // \t{title: val}\n  // }]\n  // onActorClick = (props) =>\n  // \tthis.setState({\n  // \t\tselectedActor: props\n  // \t})\n\n\n  render() {\n    console.log('frommmmm actors component file', this.state.actors.length);\n    let lis = this.state.sortedActors.map(actor => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, actor); //(SELECT * FROM media WHERE actor_1 OR actor_2 OR actor_3 RETURNING id, title   )\n      // 1. from this list actors I want to display the id of the row the actor  shows up in\n    });\n    return React.createElement(\"div\", {\n      className: \"App-Component-Actors-Route-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Hello Actors\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, lis));\n  }\n\n}\n\nexport default AllActorsList;","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js"],"names":["React","Component","APIactors","APItourbyactor","AllActorsList","constructor","props","state","actors","sortedActors","loadActors","console","log","fetch","then","res","json","result","setState","generateUniqueActors","catch","err","filmList","uniqueActors","forEach","film","actor_1","undefined","actor_2","actor_3","Object","keys","sort","componentWillMount","locationsByActors","actorLocList","title","render","length","lis","map","actor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import {Container, Row, Col }from 'react-bootstrap'\n// import { MapContainer } from './MapContainer';\nconst APIactors = '/AllActors'\nconst APItourbyactor = '/TourByActor/'\n\n\nclass AllActorsList extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactors: [],\n\t\t\tsortedActors: []\n\t\t}\n\t}\n\n\tloadActors (){\n\t\tconsole.log(\"Ringing:\", APIactors)\n\t\tfetch (APIactors)\n\t\t\t.then(res => res.json())\n\t\t\t.then(result => {\n\t\t\t\tthis.setState({actors:result})\n\t\t\t\tthis.setState({sortedActors: this.generateUniqueActors(this.state.actors)})\n\t\t\t\tconsole.log('âœ…',this.generateUniqueActors(this.state.actors))\n\t\t\t})\n\t\t\t.catch(err => console.log('ðŸ›‘ðŸ›‘ðŸ›‘ Check All Actors Component',err))\n\t}\n\n\tgenerateUniqueActors(filmList) {\n\t\tvar uniqueActors = {}\n\n\t\tfilmList.forEach(film => {\n\t\t\t// TODO: refactor into loop\n\t\t\tif (uniqueActors[film.actor_1] == undefined) {\n\t\t\t\tuniqueActors[film.actor_1] = true\n\t\t\t}\n\t\t\tif (uniqueActors[film.actor_2] == undefined) {\n\t\t\t\tuniqueActors[film.actor_2] = true\n\t\t\t}\n\t\t\tif (uniqueActors[film.actor_3] == undefined) {\n\t\t\t\tuniqueActors[film.actor_3] = true\n\t\t\t}\n\t\t})\n\n\t\tlet sortedActors = Object.keys(uniqueActors).sort()\n\n\t\treturn sortedActors\n}\n\n\tcomponentWillMount() {\n\t\tthis.loadActors();\n\t}\n\n\tlocationsByActors(actorLocList) {\n\t\tactorLocList.forEach(actors => {\n\t\t\tfetch (APIactors + actors)\n\t\t\t.then(res => res.json())\n\t\t\t.then(result => {\n\t\t\t\tthis.setState({title: result})\n\t\t\t\tconsole.log(\"ðŸ’‹\", this.state.result)\n\t\t\t\t// this.setState({actorLocs:)})\n\t\t\t})\n\t\t})\n\t}\n\n\n\n// [\n// \t{name: \"Eddie Murphy\", films: [ {name: \"\", id: \"\"} ]}\n// ]\n\n// [{\n// actor: value\n// \t{id: val,\n// \t{title: val}\n// }]\n\n\n\t// onActorClick = (props) =>\n\t// \tthis.setState({\n\t// \t\tselectedActor: props\n\t// \t})\n\n\trender(){\n\n\t\tconsole.log('frommmmm actors component file', this.state.actors.length)\n\n\t\tlet lis = this.state.sortedActors.map(actor => {\n\t\t\treturn <li>{actor}</li>\n\n\n\t//(SELECT * FROM media WHERE actor_1 OR actor_2 OR actor_3 RETURNING id, title   )\n\t// 1. from this list actors I want to display the id of the row the actor  shows up in\n\n\t\t})\n\n\t\treturn (\n\t\t\t<div className=\"App-Component-Actors-Route-Container\">\n\t\t\t\t\t\t<h1>Hello Actors</h1>\n\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t{lis}\n\t\t\t\t\t\t</ol>\n\n\t\t\t</div>\n\t\t\t\t)\n\t}\n}\n\n\n\n\n\nexport default AllActorsList;"]},"metadata":{},"sourceType":"module"}