{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/MapContainer.js\";\n\n/*global google */\nimport React, { Component } from 'react';\nimport { Map, GoogleAPI, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport CurrentLoc from './CurrentLoc';\nimport GoogleMap from './MarkerCluster';\nimport { Container, Row, Col } from 'react-bootstrap'; // import MarkerClusterer from '../public/markerclusterer/markerclusterer.js'\n// import {default as MarkerClusterer} from \"react-google-maps/lib/components/addons/MarkerClusterer\";\n// import MarkerClusterer from 'node-js-marker-clusterer';\n// import { MarkerClusterer } from '@react-google-maps/api';\n//import MarkerCluster from '/Users/tpl9/Dev/WWTF/client/src/markerclusterer/markerclusterer.js'\n\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {} // markerCluster: {}\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    // console.log(this.props.locations)\n    // console.log('ðŸ˜¬',MarkerClusterer)\n    // var markerCluster = new MarkerClusterer(this.props.maps, this.props.locations,\n    //     {imagePath: '/markerclusterer/m'});\n    //     console.log('ðŸ˜¬ðŸ˜¬ðŸ˜¬',markerCluster)\n    // let position = new google.maps.LatLng(-34, 151);\n    // console.log(\"!!!!!!!\", position, position.lat(), position.lng())\n    // var markers = []\n    // var markerCluster\n    // if (this.props.locations.length > 0) {\n    //     markers = this.props.locations.map((locationData, idx) => {\n    //         let latlong = {lat: parseFloat(locationData.lat), lng: parseFloat(locationData.lng)}\n    //         let position = new google.maps.LatLng(-34, 151);\n    //         //console.log(position, parseFloat(locationData.lat), parseFloat(locationData.lng))\n    //         const entry = {\n    //             position: {\n    //               lat: -31.563910,\n    //               lng: 147.154312\n    //             },\n    //             name: this.props.locations[idx].title\n    //           }\n    //         return entry\n    //         // return <Marker\n    //         //         key={idx}\n    //         //         position={{lat: -31.563910, lng: 147.154312}}\n    //         //         onClick={this.onMarkerClick}\n    //         //         name={this.props.locations[idx].title}/>\n    //     })\n    //     console.log(\"hellloooo\",markers[0])\n    //     markerCluster = <MarkerCluster\n    //                     markers={markers}\n    //                     click={this.onMarkerClick}\n    //                     mouseover={this.onMouseOver}\n    //                     mouseout={this.onMouseOut}\n    //                 />\n    //     console.log(\"??\", markerCluster.markers, markers)\n    // }\n    // console.log(\"!!!\",google)\n    // <MarkerCluster\n    //                     markers={markers}\n    //                     click={this.onMarkerClick}\n    //                     mouseover={this.onMouseOver}\n    //                     mouseout={this.onMouseOut}\n    //                 />\n    return React.createElement(Container, {\n      id: \"mapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(GoogleMap, Object.assign({\n      google: this.props.google\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Map, {\n      google: google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBANS3n7z4t5krZlgs8Kq7PuYINovATF2s'\n})(MapContainer);","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/MapContainer.js"],"names":["React","Component","Map","GoogleAPI","GoogleApiWrapper","InfoWindow","CurrentLoc","GoogleMap","Container","Row","Col","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google","name","apiKey"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,gBAAzB,EAA2CC,UAA3C,QAA4D,mBAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC,C,CACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACxCW,KADwC,GAChC;AACJC,MAAAA,iBAAiB,EAAE,KADf;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,aAAa,EAAE,EAHX,CAIJ;;AAJI,KADgC;;AAAA,SASxCC,aATwC,GASxB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACZ,KAAKC,QAAL,CAAc;AACVL,MAAAA,aAAa,EAAEE,KADL;AAEVH,MAAAA,YAAY,EAAEI,MAFJ;AAGVL,MAAAA,iBAAiB,EAAE;AAHT,KAAd,CAVoC;;AAAA,SAgBxCQ,OAhBwC,GAgB9BJ,KAAK,IAAI;AACf,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAClC,aAAKO,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE,KADT;AAEVC,UAAAA,YAAY,EAAE;AAFJ,SAAd;AAIC;AACJ,KAvBuC;AAAA;;AA2BxCQ,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAEI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,SAAD;AACA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM;AADnB,OAEI,KAAKN,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,EAOQ,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAEM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,UAAD;AACI,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWE,YADvB;AAEI,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFxB;AAGI,MAAA,OAAO,EAAE,KAAKQ,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBS,IAA9B,CADJ,CALJ,CANJ,CAPR,CAFJ;AA4BH;;AA3GuC;AA+G5C,eAAepB,gBAAgB,CAAC;AAC5BqB,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEVd,YAFU,CAAf","sourcesContent":["/*global google */\nimport React, { Component} from 'react';\nimport { Map, GoogleAPI, GoogleApiWrapper, InfoWindow} from 'google-maps-react';\nimport CurrentLoc from './CurrentLoc';\nimport GoogleMap from './MarkerCluster';\nimport {Container, Row, Col }from 'react-bootstrap'\n// import MarkerClusterer from '../public/markerclusterer/markerclusterer.js'\n// import {default as MarkerClusterer} from \"react-google-maps/lib/components/addons/MarkerClusterer\";\n// import MarkerClusterer from 'node-js-marker-clusterer';\n// import { MarkerClusterer } from '@react-google-maps/api';\n//import MarkerCluster from '/Users/tpl9/Dev/WWTF/client/src/markerclusterer/markerclusterer.js'\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        // markerCluster: {}\n\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n        this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n            });\n        }\n    };\n\n\n\n    render() {\n        // console.log(this.props.locations)\n        // console.log('ðŸ˜¬',MarkerClusterer)\n        // var markerCluster = new MarkerClusterer(this.props.maps, this.props.locations,\n        //     {imagePath: '/markerclusterer/m'});\n        //     console.log('ðŸ˜¬ðŸ˜¬ðŸ˜¬',markerCluster)\n\n        // let position = new google.maps.LatLng(-34, 151);\n        // console.log(\"!!!!!!!\", position, position.lat(), position.lng())\n\n        // var markers = []\n        // var markerCluster\n        // if (this.props.locations.length > 0) {\n        //     markers = this.props.locations.map((locationData, idx) => {\n        //         let latlong = {lat: parseFloat(locationData.lat), lng: parseFloat(locationData.lng)}\n        //         let position = new google.maps.LatLng(-34, 151);\n        //         //console.log(position, parseFloat(locationData.lat), parseFloat(locationData.lng))\n        //         const entry = {\n        //             position: {\n        //               lat: -31.563910,\n        //               lng: 147.154312\n        //             },\n        //             name: this.props.locations[idx].title\n        //           }\n\n        //         return entry\n        //         // return <Marker\n        //         //         key={idx}\n        //         //         position={{lat: -31.563910, lng: 147.154312}}\n        //         //         onClick={this.onMarkerClick}\n        //         //         name={this.props.locations[idx].title}/>\n        //     })\n\n        //     console.log(\"hellloooo\",markers[0])\n\n        //     markerCluster = <MarkerCluster\n        //                     markers={markers}\n        //                     click={this.onMarkerClick}\n        //                     mouseover={this.onMouseOver}\n        //                     mouseout={this.onMouseOut}\n        //                 />\n\n        //     console.log(\"??\", markerCluster.markers, markers)\n        // }\n        // console.log(\"!!!\",google)\n\n        // <MarkerCluster\n        //                     markers={markers}\n        //                     click={this.onMarkerClick}\n        //                     mouseover={this.onMouseOver}\n        //                     mouseout={this.onMouseOut}\n        //                 />\n        return (\n\n            <Container id=\"mapComponent\">\n\n            <GoogleMap\n            google={this.props.google}\n            {...this.props}\n            />\n\n                    <Map google={google}>\n\n\n\n\n\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}\n                        >\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBANS3n7z4t5krZlgs8Kq7PuYINovATF2s'\n  })(MapContainer);"]},"metadata":{},"sourceType":"module"}