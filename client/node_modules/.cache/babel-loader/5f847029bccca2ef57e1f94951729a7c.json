{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar helper_1 = require(\"../../utils/helper\");\n\nvar map_context_1 = require(\"../../map-context\");\n\nvar eventMap = {\n  onCloseClick: \"closeclick\",\n  onPanoChanged: \"pano_changed\",\n  onPositionChanged: \"position_changed\",\n  onPovChanged: \"pov_changed\",\n  onResize: \"resize\",\n  onStatusChanged: \"status_changed\",\n  onVisibleChanged: \"visible_changed\",\n  onZoomChanged: \"zoom_changed\"\n};\nvar updaterMap = {\n  register: function register(instance, provider, options) {\n    instance.registerPanoProvider(provider, options);\n  },\n  links: function links(instance, _links) {\n    instance.setLinks(_links);\n  },\n  motionTracking: function motionTracking(instance, _motionTracking) {\n    instance.setMotionTracking(_motionTracking);\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options);\n  },\n  pano: function pano(instance, _pano) {\n    instance.setPano(_pano);\n  },\n  position: function position(instance, _position) {\n    instance.setPosition(_position);\n  },\n  pov: function pov(instance, _pov) {\n    instance.setPov(_pov);\n  },\n  visible: function visible(instance, _visible) {\n    instance.setVisible(_visible);\n  },\n  zoom: function zoom(instance, _zoom) {\n    instance.setZoom(_zoom);\n  }\n};\n\nvar StreetViewPanorama = function (_super) {\n  __extends(StreetViewPanorama, _super);\n\n  function StreetViewPanorama() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.registeredEvents = [];\n    _this.state = {\n      streetViewPanorama: null\n    };\n\n    _this.setStreetViewPanoramaCallback = function () {\n      if (_this.state.streetViewPanorama !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.streetViewPanorama);\n      }\n    };\n\n    return _this;\n  }\n\n  StreetViewPanorama.prototype.componentDidMount = function () {\n    var streetViewPanorama = this.context.getStreetView();\n    this.registeredEvents = helper_1.applyUpdatersToPropsAndRegisterEvents({\n      updaterMap: updaterMap,\n      eventMap: eventMap,\n      prevProps: {},\n      nextProps: this.props,\n      instance: streetViewPanorama\n    });\n\n    function setStreetViewPanorama() {\n      return {\n        streetViewPanorama: streetViewPanorama\n      };\n    }\n\n    this.setState(setStreetViewPanorama, this.setStreetViewPanoramaCallback);\n  };\n\n  StreetViewPanorama.prototype.componentDidUpdate = function (prevProps) {\n    if (this.state.streetViewPanorama !== null) {\n      helper_1.unregisterEvents(this.registeredEvents);\n      this.registeredEvents = helper_1.applyUpdatersToPropsAndRegisterEvents({\n        updaterMap: updaterMap,\n        eventMap: eventMap,\n        prevProps: prevProps,\n        nextProps: this.props,\n        instance: this.state.streetViewPanorama\n      });\n    }\n  };\n\n  StreetViewPanorama.prototype.componentWillUnmount = function () {\n    if (this.state.streetViewPanorama !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.streetViewPanorama);\n      }\n\n      helper_1.unregisterEvents(this.registeredEvents);\n      this.state.streetViewPanorama.setVisible(false);\n    }\n  };\n\n  StreetViewPanorama.prototype.render = function () {\n    return null;\n  };\n\n  StreetViewPanorama.contextType = map_context_1.default;\n  return StreetViewPanorama;\n}(React.PureComponent);\n\nexports.StreetViewPanorama = StreetViewPanorama;\nexports.default = StreetViewPanorama;","map":null,"metadata":{},"sourceType":"script"}