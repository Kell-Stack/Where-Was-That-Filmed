{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reduce_1 = require(\"./reduce\");\n\nvar foreach_1 = require(\"./foreach\");\n\nexports.applyUpdaterToNextProps = function (updaterMap, prevProps, nextProps, instance) {\n  var map = {};\n\n  var iter = function iter(fn, key) {\n    var nextValue = nextProps[key];\n\n    if (nextValue !== prevProps[key]) {\n      map[key] = nextValue;\n      fn(instance, nextValue);\n    }\n  };\n\n  foreach_1.forEach(updaterMap, iter);\n  return map;\n};\n\nfunction registerEvents(props, instance, eventMap) {\n  var registeredList = reduce_1.reduce(eventMap, function reducer(acc, googleEventName, onEventName) {\n    if (typeof props[onEventName] === \"function\") {\n      acc.push(google.maps.event.addListener(instance, googleEventName, props[onEventName]));\n    }\n\n    return acc;\n  }, []);\n  return registeredList;\n}\n\nexports.registerEvents = registerEvents;\n\nfunction unregisterEvent(registered) {\n  google.maps.event.removeListener(registered);\n}\n\nfunction unregisterEvents(events) {\n  if (events === void 0) {\n    events = [];\n  }\n\n  events.map(unregisterEvent);\n}\n\nexports.unregisterEvents = unregisterEvents;\n\nfunction applyUpdatersToPropsAndRegisterEvents(_a) {\n  var updaterMap = _a.updaterMap,\n      eventMap = _a.eventMap,\n      prevProps = _a.prevProps,\n      nextProps = _a.nextProps,\n      instance = _a.instance;\n  exports.applyUpdaterToNextProps(updaterMap, prevProps, nextProps, instance);\n  return registerEvents(nextProps, instance, eventMap);\n}\n\nexports.applyUpdatersToPropsAndRegisterEvents = applyUpdatersToPropsAndRegisterEvents;","map":null,"metadata":{},"sourceType":"script"}