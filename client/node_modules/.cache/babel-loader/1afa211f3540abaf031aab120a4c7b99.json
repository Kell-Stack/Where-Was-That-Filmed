{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar invariant = require(\"invariant\");\n\nvar DirectionsService = function (_super) {\n  __extends(DirectionsService, _super);\n\n  function DirectionsService() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      directionsService: null\n    };\n\n    _this.setDirectionsServiceCallback = function () {\n      if (_this.state.directionsService !== null && _this.props.onLoad) {\n        _this.props.onLoad(_this.state.directionsService);\n      }\n    };\n\n    return _this;\n  }\n\n  DirectionsService.prototype.componentDidMount = function () {\n    invariant(!!this.props.options, \"DirectionsService expected options object as parameter, but got %s\", this.props.options);\n    var directionsService = new google.maps.DirectionsService();\n\n    function setDirectionsService() {\n      return {\n        directionsService: directionsService\n      };\n    }\n\n    this.setState(setDirectionsService, this.setDirectionsServiceCallback);\n  };\n\n  DirectionsService.prototype.componentDidUpdate = function () {\n    if (this.state.directionsService !== null) {\n      this.state.directionsService.route(this.props.options, this.props.callback);\n    }\n  };\n\n  DirectionsService.prototype.componentWillUnmount = function () {\n    if (this.state.directionsService !== null) {\n      if (this.props.onUnmount) {\n        this.props.onUnmount(this.state.directionsService);\n      }\n    }\n  };\n\n  DirectionsService.prototype.render = function () {\n    return React.createElement(React.Fragment, null);\n  };\n\n  return DirectionsService;\n}(React.PureComponent);\n\nexports.DirectionsService = DirectionsService;\nexports.default = DirectionsService;","map":null,"metadata":{},"sourceType":"script"}