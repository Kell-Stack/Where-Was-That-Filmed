{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLoc from './CurrentLoc';\nimport MarkerCluster from './MarkerCluster';\nimport { Container, Row, Col } from 'react-bootstrap'; // import MarkerClusterer from '../public/markerclusterer/markerclusterer.js'\n// import {default as MarkerClusterer} from \"react-google-maps/lib/components/addons/MarkerClusterer\";\n// import MarkerClusterer from 'node-js-marker-clusterer';\n// import { MarkerClusterer } from '@react-google-maps/api';\n\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {} // markerCluster: {}\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    // console.log(this.props.locations)\n    // console.log('😬',MarkerClusterer)\n    // var markerCluster = new MarkerClusterer(this.props.maps, this.props.locations,\n    //     {imagePath: '/markerclusterer/m'});\n    //     console.log('😬😬😬',markerCluster)\n    let markers = this.props.locations.map((latlngval, idx) => {\n      return React.createElement(Marker, {\n        key: idx,\n        position: latlngval,\n        onClick: this.onMarkerClick,\n        name: this.props.locations[idx].title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    });\n    return React.createElement(Container, {\n      id: \"mapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CurrentLoc, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      locations: this.props.locations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MarkerCluster, {\n      markers: markers,\n      click: this.onMarkerClick,\n      mouseover: this.onMouseOver,\n      mouseout: this.onMouseOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'YOU ARE HERE📍',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBANS3n7z4t5krZlgs8Kq7PuYINovATF2s'\n})(MapContainer);","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/MapContainer.js"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","CurrentLoc","MarkerCluster","Container","Row","Col","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","markers","locations","map","latlngval","idx","title","google","onMouseOver","onMouseOut","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\nimport CurrentLoc from './CurrentLoc';\nimport MarkerCluster from './MarkerCluster';\nimport {Container, Row, Col }from 'react-bootstrap'\n// import MarkerClusterer from '../public/markerclusterer/markerclusterer.js'\n// import {default as MarkerClusterer} from \"react-google-maps/lib/components/addons/MarkerClusterer\";\n// import MarkerClusterer from 'node-js-marker-clusterer';\n// import { MarkerClusterer } from '@react-google-maps/api';\n\n\n\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        // markerCluster: {}\n\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n        this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n            });\n        }\n    };\n\n\n\n    render() {\n        // console.log(this.props.locations)\n        // console.log('😬',MarkerClusterer)\n        // var markerCluster = new MarkerClusterer(this.props.maps, this.props.locations,\n        //     {imagePath: '/markerclusterer/m'});\n        //     console.log('😬😬😬',markerCluster)\n\n        let markers = this.props.locations.map((latlngval, idx) => {\n            return <Marker\n                    key={idx}\n                    position={latlngval}\n                    onClick={this.onMarkerClick}\n                    name={this.props.locations[idx].title}/>\n        })\n\n        return (\n\n            <Container id=\"mapComponent\">\n                        <CurrentLoc\n                            centerAroundCurrentLocation\n                            google={this.props.google}\n                            locations={this.props.locations}\n                        >\n\n\n                        <MarkerCluster\n                            markers={markers}\n                            click={this.onMarkerClick}\n                            mouseover={this.onMouseOver}\n                            mouseout={this.onMouseOut}\n                        />\n\n                        <Marker\n                            onClick={this.onMarkerClick} name={'YOU ARE HERE📍'}\n                        />\n\n\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.onClose}\n                        >\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </CurrentLoc>\n            </Container>\n        )\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBANS3n7z4t5krZlgs8Kq7PuYINovATF2s'\n  })(MapContainer);"]},"metadata":{},"sourceType":"module"}