{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Menu from './Menu.js';\nimport MapContainer from './MapContainer'; // import ReactRoutes from './ReactRoutes'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AllTitlesList from './AllTitlesList';\nimport AllActorsList from './AllActorsList';\nconst APIlatlng = '/LatLng'; // import { Button } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); //   this.handleChange = this.handleChange.bind(this)\n\n    this.state = {\n      locations: {}\n    };\n  }\n\n  loadLatLng() {\n    console.log(\"hello\");\n    fetch(APIlatlng, {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorrMessage: \"Error FETCHING and parsing data from postgres dbðŸ˜³\"\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(events => this.setState({\n      events\n    }));\n  }\n\n  componentDidMount() {\n    this.loadLatLng();\n  } // componentDidMount() {\n  //   fetch(APIlatlng)\n  //   .then(resp => {\n  //     if (!resp.ok) {\n  //       if (resp.status >= 400 && resp.status < 500) {\n  //         return resp.json().then(data => {\n  //           let err = {\n  //             errorMessage: data.message\n  //           };\n  //           throw err;\n  //         });\n  //       } else {\n  //         let err = {\n  //           errorrMessage: \"Error FETCHING and parsing data from postgres dbðŸ˜³\"\n  //         };\n  //         throw err;\n  //       }\n  //     }\n  //   })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/AllTitles\",\n      component: AllTitlesList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/AllActors\",\n      component: AllActorsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconsole.log(process.env.REACT_APP_TMDB_KEY);\nexport default App;","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/App.js"],"names":["React","Component","Menu","MapContainer","BrowserRouter","Router","Route","AllTitlesList","AllActorsList","APIlatlng","App","constructor","props","state","locations","loadLatLng","console","log","fetch","headers","then","resp","ok","status","json","data","err","errorMessage","message","errorrMessage","events","setState","componentDidMount","render","process","env","REACT_APP_TMDB_KEY"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,MAAMC,SAAS,GAAG,SAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEnB;;AACE,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,UAAU,GAAE;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,KAAK,CAACT,SAAD,EAAY;AACfU,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AADM,KAAZ,CAAL,CAGCC,IAHD,CAGMC,IAAI,IAAI;AACZ,UAAI,CAACA,IAAI,CAACC,EAAV,EAAc;AACZ,YAAID,IAAI,CAACE,MAAL,IAAe,GAAf,IAAsBF,IAAI,CAACE,MAAL,GAAc,GAAxC,EAA6C;AAC3C,iBAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiBK,IAAI,IAAI;AAC9B,gBAAIC,GAAG,GAAG;AACRC,cAAAA,YAAY,EAAEF,IAAI,CAACG;AADX,aAAV;AAGA,kBAAMF,GAAN;AACD,WALM,CAAP;AAMD,SAPD,MAOO;AACL,cAAIA,GAAG,GAAG;AACRG,YAAAA,aAAa,EAAE;AADP,WAAV;AAGA,gBAAMH,GAAN;AACD;AACF;;AACD,aAAOL,IAAI,CAACG,IAAL,EAAP;AACD,KApBD,EAqBCJ,IArBD,CAqBMU,MAAM,IAAI,KAAKC,QAAL,CAAc;AAC5BD,MAAAA;AAD4B,KAAd,CArBhB;AAwBD;;AAGDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,UAAL;AACH,GAxC2B,CA0C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAkB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAE1B,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHN,CADF,CADF,CADF;AAcD;;AA9EyB;;AAiF5BQ,OAAO,CAACC,GAAR,CAAYiB,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AAEA,eAAe1B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './Menu.js'\nimport MapContainer from './MapContainer'\n// import ReactRoutes from './ReactRoutes'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport AllTitlesList from './AllTitlesList';\nimport AllActorsList from './AllActorsList';\nconst APIlatlng = '/LatLng'\n// import { Button } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  //   this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      locations: {}\n    }\n  }\n\n  loadLatLng(){\n    console.log(\"hello\")\n    fetch(APIlatlng, {\n      headers: {\"content-type\": \"application/json\"}\n    })\n    .then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorrMessage: \"Error FETCHING and parsing data from postgres dbðŸ˜³\"\n          };\n          throw err;\n        }\n      }\n      return resp.json();\n    })\n    .then(events => this.setState({\n      events\n    }));\n  }\n\n\n  componentDidMount() {\n    this.loadLatLng()\n}\n\n  // componentDidMount() {\n  //   fetch(APIlatlng)\n  //   .then(resp => {\n  //     if (!resp.ok) {\n  //       if (resp.status >= 400 && resp.status < 500) {\n  //         return resp.json().then(data => {\n  //           let err = {\n  //             errorMessage: data.message\n  //           };\n  //           throw err;\n  //         });\n  //       } else {\n  //         let err = {\n  //           errorrMessage: \"Error FETCHING and parsing data from postgres dbðŸ˜³\"\n  //         };\n  //         throw err;\n  //       }\n  //     }\n  //   })\n  // }\n\n  render(){\n    return (\n      <div className=\"bg-dark\">\n        <div className=\"App\">\n          <Router>\n            <Menu />\n            <MapContainer />\n                <div>\n                    <Route path='/AllTitles' component={AllTitlesList}/>\n                    <Route path='/AllActors' component={AllActorsList}/>\n                </div>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nconsole.log(process.env.REACT_APP_TMDB_KEY)\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}