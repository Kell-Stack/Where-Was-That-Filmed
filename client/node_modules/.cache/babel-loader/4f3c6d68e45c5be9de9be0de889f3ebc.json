{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js\";\nimport React, { Component } from 'react'; // import {Container, Row, Col }from 'react-bootstrap'\n// import { MapContainer } from './MapContainer';\n\nconst APIactors = '/AllActors';\n\nclass AllActorsList extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onActorClick = props => this.setState({\n      selectedActor: props\n    });\n\n    this.state = {\n      actors: []\n    };\n  }\n\n  loadActors() {\n    console.log(\"Ringing:\", APIactors);\n    fetch(APIactors).then(res => res.json()).then(result => this.setState({\n      actors: result\n    })).catch(err => console.log('ðŸ›‘ðŸ›‘ðŸ›‘ Check All Actors Component', err));\n  }\n\n  componentWillMount() {\n    this.loadActors();\n  }\n\n  render() {\n    console.log('frommmmm actors component file', this.state.actors.length);\n\n    function generateUniqueActors(filmList) {\n      filmList.forEach(film => {});\n    } // 1. For each actor in row, check if unique\n    // 2. check if unique: If it exists in dictionary, move on, if not, add to dictionary\n    // this.state.actors.forEach {\n    // }\n\n\n    return React.createElement(\"div\", {\n      className: \"App-Component-Actors-Route-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Hello Actors\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AllActorsList;","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js"],"names":["React","Component","APIactors","AllActorsList","constructor","props","onActorClick","setState","selectedActor","state","actors","loadActors","console","log","fetch","then","res","json","result","catch","err","componentWillMount","render","length","generateUniqueActors","filmList","forEach","film"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AACA;;AACA,MAAMC,SAAS,GAAG,YAAlB;;AAKA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACrB,UAAMA,MAAN;;AADqB,SAkBtBC,YAlBsB,GAkBND,KAAD,IACd,KAAKE,QAAL,CAAc;AACbC,MAAAA,aAAa,EAAEH;AADF,KAAd,CAnBqB;;AAErB,SAAKI,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA;;AAEDC,EAAAA,UAAU,GAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,SAAxB;AACAY,IAAAA,KAAK,CAAEZ,SAAF,CAAL,CACEa,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,MAAM,IAAI,KAAKX,QAAL,CAAc;AAACG,MAAAA,MAAM,EAACQ;AAAR,KAAd,CAFjB,EAGEC,KAHF,CAGQC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAgDO,GAAhD,CAHf;AAIA;;AACCC,EAAAA,kBAAkB,GAAG;AACtB,SAAKV,UAAL;AACA;;AAQDW,EAAAA,MAAM,GAAE;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKJ,KAAL,CAAWC,MAAX,CAAkBa,MAAhE;;AAEA,aAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACvCA,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAI,IAAI,CAExB,CAFD;AAGA,KAPM,CASP;AACA;AAEA;AAEA;;;AACA,WACC;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADD;AAYA;;AApDoC;;AA2DtC,eAAexB,aAAf","sourcesContent":["import React, {Component} from 'react';\n// import {Container, Row, Col }from 'react-bootstrap'\n// import { MapContainer } from './MapContainer';\nconst APIactors = '/AllActors'\n\n\n\n\nclass AllActorsList extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      actors: []\n\t\t}\n\t}\n\n\tloadActors (){\n\t\tconsole.log(\"Ringing:\", APIactors)\n\t\tfetch (APIactors)\n\t\t\t.then(res => res.json())\n\t\t\t.then(result => this.setState({actors:result}))\n\t\t\t.catch(err => console.log('ðŸ›‘ðŸ›‘ðŸ›‘ Check All Actors Component',err))\n\t}\n\t  componentWillMount() {\n\t\tthis.loadActors();\n\t}\n\n\tonActorClick = (props) =>\n\t\tthis.setState({\n\t\t\tselectedActor: props\n\t\t})\n\n\n\trender(){\n\t\tconsole.log('frommmmm actors component file', this.state.actors.length)\n\n\t\tfunction generateUniqueActors(filmList) {\n\t\t\tfilmList.forEach(film => {\n\n\t\t\t})\n\t\t}\n\n\t\t// 1. For each actor in row, check if unique\n\t\t// 2. check if unique: If it exists in dictionary, move on, if not, add to dictionary\n\n\t\t// this.state.actors.forEach {\n\n\t\t// }\n\t\treturn (\n\t\t\t<div className=\"App-Component-Actors-Route-Container\">\n\t\t\t\t\t\t<h1>Hello Actors</h1>\n\n\t\t\t\t\t\t<ol>\n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ol>\n\n\t\t\t</div>\n\t\t\t\t)\n\t}\n}\n\n\n\n\n\nexport default AllActorsList;"]},"metadata":{},"sourceType":"module"}