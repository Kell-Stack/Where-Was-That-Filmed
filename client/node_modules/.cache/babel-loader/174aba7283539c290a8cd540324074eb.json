{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isRobotoStyle = function isRobotoStyle(element) {\n  if (element.href && element.href.indexOf(\"https://fonts.googleapis.com/css?family=Roboto\") === 0) {\n    return true;\n  }\n\n  if (element.tagName.toLowerCase() === \"style\" && element.styleSheet && element.styleSheet.cssText && element.styleSheet.cssText.replace(\"\\r\\n\", \"\").indexOf(\".gm-style\") === 0) {\n    element.styleSheet.cssText = \"\";\n    return true;\n  }\n\n  if (element.tagName.toLowerCase() === \"style\" && element.innerHTML && element.innerHTML.replace(\"\\r\\n\", \"\").indexOf(\".gm-style\") === 0) {\n    element.innerHTML = \"\";\n    return true;\n  }\n\n  if (element.tagName.toLowerCase() === \"style\" && !element.styleSheet && !element.innerHTML) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.preventGoogleFonts = function () {\n  console.log('preventGoogleFonts run');\n  var head = document.getElementsByTagName(\"head\")[0];\n  var trueInsertBefore = head.insertBefore.bind(head);\n\n  head.insertBefore = function insertBefore(newElement, referenceElement) {\n    if (!isRobotoStyle(newElement)) {\n      Reflect.apply(trueInsertBefore, head, [newElement, referenceElement]);\n    }\n  };\n\n  var trueAppend = head.appendChild.bind(head);\n\n  head.appendChild = function appendChild(textNode) {\n    if (!isRobotoStyle(textNode)) {\n      Reflect.apply(trueAppend, head, [textNode]);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}