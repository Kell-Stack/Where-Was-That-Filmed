{"ast":null,"code":"var _jsxFileName = \"/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js\";\nimport React from 'react';\nconst dbData = '/Actors';\n\nclass AllActorsList extends React.Component {\n  loadActors() {\n    fetch(dbData, {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorrMessage: \"Error FETCHING from database\"\n          };\n          throw err;\n        }\n      } // return resp.json();\n\n    }).then(actList => this.setState({\n      actList\n    }));\n  }\n\n  componentWillMount() {\n    this.loadActors();\n  }\n\n  render() {\n    console.log('frommmmm actors component file');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Hello Actors\"));\n  }\n\n}\n\nexport default AllActorsList;","map":{"version":3,"sources":["/Users/tpl9/Dev/WWTF/client/src/AllActorsList.js"],"names":["React","dbData","AllActorsList","Component","loadActors","fetch","headers","then","resp","ok","status","json","data","err","errorMessage","message","errorrMessage","actList","setState","componentWillMount","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,SAAf;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAG3CC,EAAAA,UAAU,GAAG;AACZC,IAAAA,KAAK,CAAEJ,MAAF,EAAU;AACdK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AADK,KAAV,CAAL,CAGCC,IAHD,CAGMC,IAAI,IAAI;AACb,UAAI,CAACA,IAAI,CAACC,EAAV,EAAc;AACZ,YAAID,IAAI,CAACE,MAAL,IAAe,GAAf,IAAsBF,IAAI,CAACE,MAAL,GAAc,GAAxC,EAA6C;AAC9C,iBAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiBK,IAAI,IAAI;AAC9B,gBAAIC,GAAG,GAAG;AACXC,cAAAA,YAAY,EAAEF,IAAI,CAACG;AADR,aAAV;AAGA,kBAAMF,GAAN;AACD,WALM,CAAP;AAME,SAPD,MAOO;AACR,cAAIA,GAAG,GAAG;AACRG,YAAAA,aAAa,EAAE;AADP,WAAV;AAGA,gBAAMH,GAAN;AACE;AACF,OAfY,CAgBb;;AACE,KApBH,EAqBGN,IArBH,CAqBQU,OAAO,IAAI,KAAKC,QAAL,CAAc;AAChCD,MAAAA;AADgC,KAAd,CArBnB;AAwBE;;AAEDE,EAAAA,kBAAkB,GAAG;AACtB,SAAKf,UAAL;AACA;;AAGDgB,EAAAA,MAAM,GAAE;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CADD;AAKA;;AA1C0C;;AAiD5C,eAAepB,aAAf","sourcesContent":["import React from 'react';\n\nconst dbData = '/Actors';\n\nclass AllActorsList extends React.Component {\n\n\n\tloadActors (){\n\t\tfetch (dbData, {\n\t\t\theaders: {\"content-type\": \"application/json\"}\n\t\t})\n\t\t.then(resp => {\n\t\t\tif (!resp.ok) {\n\t\t\t  if (resp.status >= 400 && resp.status < 500) {\n\t\t\t\treturn resp.json().then(data => {\n\t\t\t\t  let err = {\n\t\t\t\t\terrorMessage: data.message\n\t\t\t\t  };\n\t\t\t\t  throw err;\n\t\t\t\t});\n\t\t\t  } else {\n\t\t\t\tlet err = {\n\t\t\t\t  errorrMessage: \"Error FETCHING from database\"\n\t\t\t\t};\n\t\t\t\tthrow err;\n\t\t\t  }\n\t\t\t}\n\t\t\t// return resp.json();\n\t\t  })\n\t\t  .then(actList => this.setState({\n\t\t\tactList\n\t\t  }));\n\t  }\n\n\t  componentWillMount() {\n\t\tthis.loadActors();\n\t}\n\n\n\trender(){\n\t\tconsole.log('frommmmm actors component file')\n\t\treturn (\n\t\t\t<div >\n\t\t\t\t<h1>Hello Actors</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n\n\n\nexport default AllActorsList;"]},"metadata":{},"sourceType":"module"}